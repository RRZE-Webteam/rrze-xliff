{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/src/js/block-editor-functions.js","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["registerPlugin","wp","plugins","PluginPostStatusInfo","editPost","components","Button","TextControl","Modal","Disabled","withState","compose","__","i18n","Fragment","element","render","currentUrl","window","location","postId","URL","searchParams","get","xliffExportUrl","protocol","host","pathname","ExportModal","isOpen","emailAddress","setState","handleFiles","files","reader","FileReader","onload","xliffString","oParser","DOMParser","oDOM","parseFromString","target","result","submitButton","document","querySelector","title","content","removeAttribute","childNodes","xliffNode","nodeName","childNode","fileChild","id","titleNodes","titleNodeSegment","textContent","bodyNodes","bodyNodeSegment","addEventListener","e","blocks","parse","data","dispatch","resetBlocks","insertBlocks","readAsText","ImportModal","hasFile","button"],"mappings":"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","file":"block-editor-functions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./assets/src/js/block-editor-functions.js\");\n","const {registerPlugin} = wp.plugins;\nconst {PluginPostStatusInfo} = wp.editPost;\nconst {\n    Button,\n    TextControl,\n    Modal,\n    Disabled,\n} = wp.components;\nconst {withState} = wp.compose;\nconst {__} = wp.i18n;\nconst {Fragment} = wp.element;\n\nregisterPlugin( 'rrze-xliff', {\n    render: () => {\n        const currentUrl = window.location;\n        const postId = new URL(currentUrl).searchParams.get('post');\n        const xliffExportUrl = `${currentUrl.protocol}//${currentUrl.host}${currentUrl.pathname}?xliff-export=${postId}`;\n        const ExportModal = withState({\n            isOpen: false,\n            emailAddress: '',\n        })(({isOpen, emailAddress, setState}) => (\n            <Fragment>\n                <Button isTertiary onClick={() => setState({isOpen: true}) }>{__('Export', 'rrze-xliff')}</Button>\n                { isOpen && (\n                    <Modal\n                        title={__('Export post as XLIFF', 'rrze-xliff')}\n                        onRequestClose={ () => setState( { isOpen: false } ) }\n                    >\n                        <p>\n                            <Button\n                                href={ xliffExportUrl }\n                                isDefault={ true }\n                            >\n                                {__('Download XLIFF file', 'rrze-xliff')}\n                            </Button>\n                        </p>\n                        <p><strong>{__( 'Or send the file to an email address:', 'rrze-xliff')}</strong></p>\n                        <TextControl\n                            label={__('Email address', 'rrze-xliff')}\n                            value={ emailAddress }\n                            onChange={ ( emailAddress ) => setState( { emailAddress } ) }\n                        />\n                        <p>\n                            <Button\n                                href={`${currentUrl.protocol}//${currentUrl.host}${currentUrl.pathname}?xliff-export=${postId}&xliff_export_email_address=${emailAddress}`}\n                                isDefault={ true }\n                            >\n                                {__('Send XLIFF file', 'rrze-xliff')}\n                            </Button>\n                        </p>\n                    </Modal>\n                ) }\n            </Fragment>\n        ) );\n\n        function handleFiles( files ) {\n            const reader = new FileReader();\n\n            // Funktion, die nach Auslesen der Datei ausgeführt wird.\n            reader.onload = (xliffString) => {\n                let oParser = new DOMParser(),\n                    oDOM = oParser.parseFromString(xliffString.target.result, 'application/xml'),\n                    submitButton = document.querySelector('#xliff-import-button'),\n                    title,\n                    content;\n\n                submitButton.removeAttribute('hidden');\n\n                // Die Knoten der XLIFF-Datei durchlaufen und die Strings zusammensetzen, die\n                // in den Editor kommen.\n                for (let xliffNode of oDOM.childNodes) {\n                    if (xliffNode.nodeName === 'xliff') {\n                        for (let childNode of xliffNode.childNodes) {\n                            if (childNode.nodeName === 'file') {\n                                for (let fileChild of childNode.childNodes) {\n                                    if (fileChild.nodeName === 'unit') {\n                                        if (fileChild.id === 'title') {\n                                            for (let titleNodes of fileChild.childNodes) {\n                                                if (titleNodes.nodeName === 'segment') {\n                                                    for (let titleNodeSegment of titleNodes.childNodes) {\n                                                        if (titleNodeSegment.nodeName === 'target') {\n                                                            title = titleNodeSegment.textContent;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        } else if (fileChild.id === 'body') {\n                                            for (let bodyNodes of fileChild.childNodes) {\n                                                if (bodyNodes.nodeName === 'segment') {\n                                                    for (let bodyNodeSegment of bodyNodes.childNodes) {\n                                                        if (bodyNodeSegment.nodeName === 'target') {\n                                                            content = bodyNodeSegment.textContent;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n\n                                        /**\n                                         * @todo: darum kümmern, dass auch Meta-Daten, Beschreibungen von Bildern \n                                         * et cetera importiert werden. Würde ich dann als Liste in einen Code-Block packen \n                                         * oder so.\n                                         */\n                                    }\n                                }\n                            }\n                        }\n                    }    \n                }\n\n                submitButton.addEventListener('click', function(e) {\n                    // Das HTML des Beitragsinhalts aus der XLIFF-Datei in Blöcke parsen.\n                    content = wp.blocks.parse(content);\n\n\t\t\t\t\t// Die alten Blöcke aus dem Editor löschen.\n\t\t\t\t\t// @link https://wordpress.stackexchange.com/a/305935.\n                    wp.data.dispatch( 'core/editor' ).resetBlocks([]);\n\n                    // Content-Blöcke einfügen und Titel aktualisieren.\n                    wp.data.dispatch( 'core/editor' ).insertBlocks(content);\n                    wp.data.dispatch('core/editor').editPost({title});\n                })\n            };\n            // Mit FileReader() die ausgewählte Datei auslesen.\n            reader.readAsText(files[0]);\n        }\n\n        const ImportModal = withState( {\n            isOpen: false,\n            hasFile: false,\n        } )( ( { isOpen, hasFile, setState } ) => {\n            let button = <Button isDefault id=\"xliff-import-button\" onClick={() => setState({isOpen: false})} hidden=\"true\">{__('Import', 'rrze-xliff')}</Button>;\n            return (\n                <Fragment>\n                    <Button isTertiary onClick={() => setState({isOpen: true})}>{__( 'Import', 'rrze-xliff') }</Button>\n                    {isOpen && (\n                        <Modal\n                            title={__( 'Import', 'rrze-xliff') }\n                            onRequestClose={ () => setState({isOpen: false})}\n                        >\n                            <input type=\"file\" id=\"xliff-file\" name=\"xliff-file\" accept=\".xliff\" onChange={(e) => {\n                                    handleFiles(e.target.files);\n                                    if (e.target.files) {\n                                        setState({hasFile: true})\n                                    } else {\n                                        setState({hasFile: false})\n                                    }\n                                }}/>\n                            <p>\n                                {!hasFile ? <Disabled>{button}</Disabled> : button}\n                            </p>\n                        </Modal>\n                    )}\n                </Fragment>\n            )\n        } );\n        return (\n            <PluginPostStatusInfo\n                className=\"rrze-xliff-export-and-import\"\n            >\n                <div>\n                {__( 'XLIFF:', 'rrze-xliff') } <ExportModal/> <ImportModal/>\n                </div>\n            </PluginPostStatusInfo>\n        )\n    }\n})\n","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}